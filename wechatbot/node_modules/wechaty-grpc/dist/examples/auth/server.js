"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = __importDefault(require("util"));
const fs_1 = __importDefault(require("fs"));
const mod_1 = require("../../src/mod");
const puppet_server_impl_1 = require("../../tests/puppet-server-impl");
const puppetServerExample = {
    ...puppet_server_impl_1.puppetServerImpl,
    ding: (call, callback) => {
        const data = call.request.getData();
        console.info(`ding(${data})`);
        console.info('metadata:', call.metadata.getMap());
        console.info('getPeer:', call.getPeer());
        console.info('getDeadLine:', call.getDeadline());
        // console.info('getDeadLine:', call.)
        callback(null, new mod_1.DingResponse());
    },
};
async function main() {
    const server = new mod_1.grpc.Server();
    server.addService(mod_1.PuppetService, puppetServerExample);
    const serverBindPromise = util_1.default.promisify(server.bindAsync.bind(server));
    const rootCerts = fs_1.default.readFileSync('ca.crt');
    const keyCertPairs = [{
            cert_chain: fs_1.default.readFileSync('server.crt'),
            private_key: fs_1.default.readFileSync('server.key'),
        }];
    const checkClientCertificate = false;
    const port = await serverBindPromise('127.0.0.1:8788', 
    // grpc.ServerCredentials.createInsecure(),
    mod_1.grpc.ServerCredentials.createSsl(rootCerts, keyCertPairs, checkClientCertificate));
    console.info('Listen on port:', port);
    server.start();
    return 0;
}
main()
    .catch(console.error);
//# sourceMappingURL=server.js.map