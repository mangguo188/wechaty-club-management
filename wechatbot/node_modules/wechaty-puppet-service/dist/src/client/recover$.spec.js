#!/usr/bin/env ts-node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tstest_1 = require("tstest");
// import {
//   TestScheduler,
//   hot, expectObservable, expectSubscriptions, cold
// }                     from 'rxjs/testing'
const recover_1 = require("./recover$");
tstest_1.test('switchSuccess()', async (t) => {
    const STATUS = true;
    const EXPECTED_RESULT = true;
    t.equal(recover_1.switchSuccess(STATUS), EXPECTED_RESULT, 'should get expected result');
});
// test('switchSuccess()', async (t) => {
//   const SOURCE_MARBLES   = '-a-'
//   const EXPECTED_MARBLES = '-a-'
//   const scheduler = new TestScheduler((actual, expected) => {
//     t.deepEqual(actual, expected)
//     console.info('actual', actual)
//     console.info('expected', expected)
//   })
//   scheduler.expectObservable(observable).toBe(expectedMarbles);
//   scheduler.flush();
// })
//# sourceMappingURL=recover$.spec.js.map