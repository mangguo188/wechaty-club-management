"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PuppetServer = void 0;
const util_1 = __importDefault(require("util"));
const wechaty_grpc_1 = require("wechaty-grpc");
const config_1 = require("../config");
const puppet_implementation_1 = require("./puppet-implementation");
class PuppetServer {
    constructor(options) {
        this.options = options;
        config_1.log.verbose('PuppetServer', 'constructor({endpoint: "%s", puppet: "%s", token: "%s"})', options.endpoint, options.puppet, options.token);
    }
    version() {
        return config_1.VERSION;
    }
    async start() {
        config_1.log.verbose('PuppetServer', 'start()');
        if (this.grpcServer) {
            throw new Error('grpc server existed!');
        }
        const puppetImpl = puppet_implementation_1.puppetImplementation(this.options.puppet);
        this.grpcServer = new wechaty_grpc_1.grpc.Server(config_1.GRPC_OPTIONS);
        this.grpcServer.addService(wechaty_grpc_1.PuppetService, puppetImpl);
        // 127.0.0.1:8788
        const port = await util_1.default.promisify(this.grpcServer.bindAsync.bind(this.grpcServer))(this.options.endpoint, wechaty_grpc_1.grpc.ServerCredentials.createInsecure());
        if (port === 0) {
            throw new Error('grpc server bind fail!');
        }
        this.grpcServer.start();
    }
    async stop() {
        config_1.log.verbose('PuppetServer', 'stop()');
        if (!this.grpcServer) {
            throw new Error('no grpc server');
        }
        await util_1.default.promisify(this.grpcServer.tryShutdown
            .bind(this.grpcServer))();
        const grpcServer = this.grpcServer;
        setImmediate(() => grpcServer.forceShutdown());
        this.grpcServer = undefined;
    }
}
exports.PuppetServer = PuppetServer;
//# sourceMappingURL=puppet-server.js.map