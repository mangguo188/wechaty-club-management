import { StorageFile } from './file';
import { StorageNop } from './nop';
export interface StorageNopOptions {
    placeholder?: never;
}
export declare type StorageFileOptions = StorageNopOptions;
export interface StorageS3Options {
    accessKeyId: string;
    secretAccessKey: string;
    region: string;
    bucket: string;
}
export interface StorageObsOptions {
    accessKeyId: string;
    secretAccessKey: string;
    server: string;
    bucket: string;
}
export declare const BACKEND_FACTORY_DICT: {
    file: () => typeof StorageFile;
    nop: () => typeof StorageNop;
    obs: () => any;
    s3: () => any;
};
export declare type StorageBackendType = keyof typeof BACKEND_FACTORY_DICT;
export declare type StorageBackendOptions = ({
    type?: 'file';
} & StorageFileOptions) | ({
    type?: 'nop';
} & StorageNopOptions) | ({
    type?: 's3';
} & StorageS3Options) | ({
    type?: 'obs';
} & StorageObsOptions);
//# sourceMappingURL=backend-config.d.ts.map