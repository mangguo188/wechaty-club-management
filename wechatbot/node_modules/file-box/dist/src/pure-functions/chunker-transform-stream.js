"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.chunkerTransformStream = void 0;
/**
 * ChunkerTransformStream, a transform stream to take arbitrary chunk sizes and make them consistent
 * https://codereview.stackexchange.com/q/57492/185709
 */
const stream_1 = __importDefault(require("stream"));
const DEFAULT_CHUNK_SIZE = 256 * 1024; // 256KB
function chunkerTransformStream(chunkSize = DEFAULT_CHUNK_SIZE) {
    let buffer = Buffer.from([]);
    const chunker = new stream_1.default.Transform({
        objectMode: true,
    });
    chunker._transform = function (chunk, _, done) {
        buffer = Buffer.concat([buffer, chunk]);
        while (buffer.length >= chunkSize) {
            this.push(buffer.slice(0, chunkSize));
            buffer = buffer.slice(chunkSize);
        }
        done();
    };
    chunker._flush = function (done) {
        if (buffer.length) {
            this.push(buffer);
        }
        done();
    };
    return chunker;
}
exports.chunkerTransformStream = chunkerTransformStream;
//# sourceMappingURL=chunker-transform-stream.js.map